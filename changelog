2015-01-08  Tyler Dinsmoor  <pappad@airmail.cc>

 * questGen:	Made comments and skeleton for various functions.



2014-12-20  Tyler Dinsmoor  <pappad@airmail.cc>

 * charGen:		Changed directory names for spells and names to reflect
				new file directories
				Now does not print playerdata independantly, just returns

 * bldgGen:		Begun Building class, calls data from charGen.

 * data/*		Each program now has their own folder for data files.

2014-12-14  Tyler Dinsmoor  <d@D-LM>

 * charGen:		Changed alignment to abbreviations, for easiar use down the
				line.



2014-12-12  Tyler Dinsmoor  <d@D-LM>

 * libdndGen:	Removed miltiVarNames(a,b).

 * charGen:		Changed some comments to comment strings, added a lot
				of documentation to the functions to explain how they
				work, and why we do things, what might need impovement.

 * README:		Updated.



2014-12-10  Tyler Dinsmoor  <d@D-LM>

 * libdndGen:	It is now OK to have whitespace before and after items
				in Spells, Names, or other LoL-parsed files, they will
				be stripped of the extra whitespace when parsed.

 * charGen:		Fixed some bugs related to migration to dictionary storage.
				Changed spell printing to be dynamic for level.
				Enabled use of supplementary classes, ie Warlock, Sorcerer.
				Wizzard is now Wizard... sorry...
				Added hitDie for getHitPoints, uses a dict now.
				Added more to getH/W
				Added level cap to prevent hang on large integers.
				getSpells uses spell slots to determine the amount of spells
				 needed for each spell level, depending on player level
				Started getSkills, getProficienceis, and getBackground.

 * data/*		Added complete spell list for all spellcasting classes, may
				 have spelling/grammar errors, should look over.


2014-12-09  Tyler Dinsmoor  <d@D-LM>

 * charGen:		All pc variables in main() now belong to the pc dict,
				 making exporting pc data much easier to different progs.
				getName now returns a full name instead of two seperate
				 ones.
				All stats are in the dict stats, and will be better, as
				 in above comment.
				Changed for better error handling; a lot of trys/excepts.
				Changed for directly returning from functions, avoid too
				 many local variables. Need to comment to avoid magic numbers.



2014-12-07  Tyler Dinsmoor  <d@D-LM>

 * charGen:		Added support for overriding race and class using the
				 -r and -c flags respectively. They will filter for case
				 and if they're legit or not.
				Fixed some bugs with getAlignment, getAge.
				Optimized parseMe()
				Added forceClass(pcClass)
				Added more descriptive error messages
				For getNames(), humanNames needs to be updated for clans,
				 as they're currently generic and more code needs to
				 be written to handle them.

 * charGen_py3:	Created, mirror of charGen, but runs with python3 instead.
				 Should consider migrating project to python3.

 * libdndGen_py3: See charGen_py3

 * data/*:		Added extra name cfgs, but they are just copies of dwarfNames,
				 they need to be updated with appropriate names


2014-12-7 Madii Salazar  <madii@localhost>

 * charGen:		Updated getAge according to the playerbook for the rest of the ages
				I have them commented out to wait for you to see if they will work
				Updated getLang accrding to the new races and the playerbook,
				 still commented out for review
				Started to update getAlignment, must finish the alignment tendencies

2014-12-06  Tyler Dinsmoor  <d@D-LM>

 * charGen:		Forgot that math existed, same with trys/except. Fixed getstatmod,
				 getName. Turned getGender into a single liner to compute in main()
				 instead, no reason for it to have it's own function.
				Put parsing stuff into a try/except block, to make it look
				 less messy and handle thing a little better.
				Optimized spells/names further, allowing for the source
				 to not need editing for every new class, just add a config
				 file instead.
				getSpells is literally just a one-liner with some error
				 handling around it. Easy peasy.
				Fixed bug where sometimes the subrace would not be found

 * libdndGen:	all getFromFile_*() functions will now ignore commented
				 lines beginning with a #

 * data/*		Commented and made standardized to comply with update
				 to libdndgen



2014-12-05  Tyler Dinsmoor  <d@D-LM>

 * charGen:		Begun adding other races and classes; racebonus, subracebonus,
				 speed, heightandweight, alignment, name, spells, languages,
				 age, speed still need to be done.

2014-12-02  Tyler Dinsmoor  <d@D-LM>

 * GENERAL:		Made data handling much better, getting stuck data out
				 of the source, making it more configureable.

 * libdndGen:	Added getFromFile_LoL(f): to facilitate above entry

 * charGen:		Simplifed spell/name call functions, made adding content easier
				Added retarded amount of comments for future modification

 * landGen:		Added comments, needs to be rewritten. Real bad.


2014-12-01  Tyler Dinsmoor  <pappad@airmail.cc>

 * GENERAL:		Added a bunch of new files, and made a layout for
				 data handling for RALC

 * charGen:		Mostly complete, still need bio desc/questhandler/trader
				Saved old dup as charGenStandalone, used in meantime
				 until project is more wholesome

 * libdndGen:	Good for now

 * bldgGen:		Created; gets input from landGen

 * landGen:		Removed printing to stdout, now only returns based on call

 * townGen:		created; commented; function skeleton

 * civGen:		""

 * questGen:	""

 * main:		""; will be main interface for overrides, etc

RALC CHANGELOG
